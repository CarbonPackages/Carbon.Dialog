prototype(Carbon.Dialog:Dialog) < prototype(Neos.Fusion:Component) {
    // If you want to use multiple dialogs on one page, you have to set a unique key
    key = false

    // The title of the dialog
    title = false

    // The content of the dialog
    content = false

    // The tag name of the title
    titleTagName = ${Configuration.setting('Carbon.Dialog.titleTagName')}

    // Make usage of the native <dialog> tag, if possible. Drawback:
    // If the User click on the background, the modal doesn't get closed
    native = ${Configuration.setting('Carbon.Dialog.native')}
    
    // By default, the dialog behaves as a dialog: it is closable with
    // the ESC key, and by clicking the backdrop. However, it is possible
    // to make it work like a "modal", which would remove these features.
    modal = ${Configuration.setting('Carbon.Dialog.modal')}
    
    // If set to false, no close button will be shown
    // If it is a string, it will renderd as content of the button
    closeButton = ${Configuration.setting('Carbon.Dialog.closeButton')}

    // Aria label of the close button
    closeLabel = ${Translation.translate('dialog.close', 'Close this window', [], null, 'Carbon.Dialog')}

    // namespace of the dialog
    namespace = 'dialog'

    // show the overlay
    showOverlay = true

    // Internal
    carbon = 'carbon-dialog'
    id = ${BEM.string(this.carbon, this.key)}

    @if.hasContent = ${this.content}

    renderer = afx`
        <div
            id={props.id}
            class={[props.carbon, BEM.modifier(props.namespace, props.key)]}
            aria-hidden={props.native ? false : 'true'}
        >
            <Carbon.Dialog:Dialog.Fragment.Overlay @key='overlay' @if.set={props.showOverlay} {...props} setKey={false} />
            <Carbon.Dialog:Dialog.Fragment.Dialog @key='dialog' {...props} />
        </div>
    `
}
