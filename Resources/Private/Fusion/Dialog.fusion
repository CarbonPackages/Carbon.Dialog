prototype(Carbon.Dialog:Dialog) < prototype(Neos.Fusion:Component) {
    // If you want to use multiple dialogs on one page, you have to set a unique key
    key = false

    // The title of the dialog
    title = false

    // The content of the dialog
    content = false

    // The tag name of the title
    titleTagName = ${Configuration.setting('Carbon.Dialog.titleTagName')}

    // Make usage of the native <dialog> tag, if possible. Drawback:
    // If the User click on the background, the modal doesn't get closed
    native = ${Configuration.setting('Carbon.Dialog.native')}
    
    // By default, the dialog behaves as a dialog: it is closable with
    // the ESC key, and by clicking the backdrop. However, it is possible
    // to make it work like a "modal", which would remove these features.
    modal = ${Configuration.setting('Carbon.Dialog.modal')}
    
    // If set to false, no close button will be shown
    // If it is a string, it will renderd as content of the button
    closeButton = ${Configuration.setting('Carbon.Dialog.closeButton')}

    // Aria label of the close button
    closeLabel = ${Translation.translate('dialog.close', 'Close this window', [], null, 'Carbon.Dialog')}

    // namespace of the dialog
    namespace = 'dialog'

    // Internal
    carbon = 'carbon-dialog'
    id = ${BEM.String(this.carbon, this.key)}

    renderer = afx`
        <div
            @if.render={props.content}
            id={props.id}
            class={[props.carbon, BEM.String(props.namespace, null, props.key)]}
            aria-hidden={props.native ? false : 'true'}
        >
            <div @key='overlay' class={[BEM.String(props.carbon, 'overlay'),BEM.String(props.namespace, 'overlay')]} data-a11y-dialog-hide={!props.modal} tabindex='-1'></div>
            <Neos.Fusion:Tag
                @key='dialog'
                tagName={props.native ? 'dialog' : 'div'}
                attributes.role={props.modal ? 'alertdialog' : props.native ? false : 'dialog'}
                attributes.aria-labelledby={props.title ? props.id + '-title' : false}
                attributes.class={[BEM.String(props.carbon, 'content'),BEM.String(props.namespace, 'content')]}
            >
                <button
                    @key='button'
                    @if.render={props.closeButton}
                    class={BEM.String(props.namespace, 'close')}
                    type='button'
                    data-a11y-dialog-hide={true}
                    aria-label={props.closeLabel}
                >
                    {Type.isString(props.closeButton) ? props.closeButton : ''}
                </button>
                <Neos.Fusion:Tag 
                    @key='title'
                    @if.render={props.titleTagName && props.title && props.title != true}
                    tagName={props.titleTagName}
                    attributes.id={props.id + '-title'}
                    attributes.class={BEM.String(props.namespace, 'title', props.key)}
                    attributes.tabindex='0'
                >
                    {props.title}
                </Neos.Fusion:Tag>
                {props.content}
            </Neos.Fusion:Tag>
        </div>
    `
}


